name: go vet test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  statictest:
    runs-on: ubuntu-latest
    container: golang:1.22.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint code
        run: |
          unformatted=$(go fmt ./...)
          if [ -n "$unformatted" ]; then 
            echo "These files are not formatted with 'go fmt': $unformatted"
            exit 1
          fi
          unformatted=$(find . -name '*.go' -exec goimports -local go-echo-ddd-template/ -l {} +)
          if [ -n "$unformatted" ]; then
            echo "These files are not formatted with 'goimports': $unformatted"
            exit 1
          fi
          unformatted=$(find . -name '*.go' -exec golines -w {} -m 120 \;)
          if [ -n "$unformatted" ]; then
            echo "These files are not formatted with 'golines': $unformatted"
            exit 1
          fi
          golangci-lint run ./...

      - name: Download statictest binary
        uses: robinraju/release-downloader@v1.8
        with:
          repository: Yandex-Practicum/go-autotests
          latest: true
          fileName: statictest
          out-file-path: .tools
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup autotest binary
        run: |
          chmod -R +x $GITHUB_WORKSPACE/.tools/statictest
          mv $GITHUB_WORKSPACE/.tools/statictest /usr/local/bin/statictest

      - name: Run statictest
        run: |
          go vet -vettool=$(which statictest) ./...
